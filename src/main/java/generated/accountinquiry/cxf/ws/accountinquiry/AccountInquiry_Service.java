package generated.accountinquiry.cxf.ws.accountinquiry;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.2.5
 * 2018-08-16T17:54:22.893+03:00
 * Generated source version: 3.2.5
 *
 */
@WebServiceClient(name = "AccountInquiry",
                  wsdlLocation = "http://40.113.2.64:6008/AccountInquiry.svc?wsdl",
                  targetNamespace = "http://tempuri.org/")
public class AccountInquiry_Service extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://tempuri.org/", "AccountInquiry");
    public final static QName BasicHttpBindingIAccountInquiry1 = new QName("http://tempuri.org/", "BasicHttpBinding_IAccountInquiry1");
    public final static QName WSHttpBindingIAccountInquiry = new QName("http://tempuri.org/", "WSHttpBinding_IAccountInquiry");
    public final static QName WSHttpBindingIAccountInquiry1 = new QName("http://tempuri.org/", "WSHttpBinding_IAccountInquiry1");
    public final static QName BasicHttpBindingIAccountInquiry = new QName("http://tempuri.org/", "BasicHttpBinding_IAccountInquiry");
    static {
        URL url = null;
        try {
            url = new URL("http://40.113.2.64:6008/AccountInquiry.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(AccountInquiry_Service.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://40.113.2.64:6008/AccountInquiry.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public AccountInquiry_Service(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public AccountInquiry_Service(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public AccountInquiry_Service() {
        super(WSDL_LOCATION, SERVICE);
    }

    public AccountInquiry_Service(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public AccountInquiry_Service(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public AccountInquiry_Service(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccountInquiry1")
    public IAccountInquiry getBasicHttpBindingIAccountInquiry1() {
        return super.getPort(BasicHttpBindingIAccountInquiry1, IAccountInquiry.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccountInquiry1")
    public IAccountInquiry getBasicHttpBindingIAccountInquiry1(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIAccountInquiry1, IAccountInquiry.class, features);
    }


    /**
     *
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "WSHttpBinding_IAccountInquiry")
    public IAccountInquiry getWSHttpBindingIAccountInquiry() {
        return super.getPort(WSHttpBindingIAccountInquiry, IAccountInquiry.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "WSHttpBinding_IAccountInquiry")
    public IAccountInquiry getWSHttpBindingIAccountInquiry(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIAccountInquiry, IAccountInquiry.class, features);
    }


    /**
     *
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "WSHttpBinding_IAccountInquiry1")
    public IAccountInquiry getWSHttpBindingIAccountInquiry1() {
        return super.getPort(WSHttpBindingIAccountInquiry1, IAccountInquiry.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "WSHttpBinding_IAccountInquiry1")
    public IAccountInquiry getWSHttpBindingIAccountInquiry1(WebServiceFeature... features) {
        return super.getPort(WSHttpBindingIAccountInquiry1, IAccountInquiry.class, features);
    }


    /**
     *
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccountInquiry")
    public IAccountInquiry getBasicHttpBindingIAccountInquiry() {
        return super.getPort(BasicHttpBindingIAccountInquiry, IAccountInquiry.class);
    }

    /**
     *
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IAccountInquiry
     */
    @WebEndpoint(name = "BasicHttpBinding_IAccountInquiry")
    public IAccountInquiry getBasicHttpBindingIAccountInquiry(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIAccountInquiry, IAccountInquiry.class, features);
    }

}
